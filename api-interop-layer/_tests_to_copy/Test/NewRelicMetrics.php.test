<?php

namespace Drupal\weather_data\Service\Test;

use Drupal\weather_data\Service\NewRelicMetrics;
use Drupal\Core\Site\Settings;
use GuzzleHttp\ClientInterface;
use GuzzleHttp\Promise\Promise;
use PHPUnit\Framework\TestCase;

final class NewRelicMetricsTest extends TestCase
{
    private $newRelic = null;
    private $client = null;

    protected function setUp(): void
    {
        parent::setUp();

        $this->client = $this->createStub(ClientInterface::class);

        $this->newRelic = new NewRelicMetrics($this->client);
    }

    /**
     * @group e2e
     * @group new-relic
     */
    public function testSendsMetric(): void
    {
        $promise = new Promise();

        $this->client
            ->expects($this->once())
            ->method("requestAsync")
            ->will(
                $this->returnValueMap([
                    [
                        "POST",
                        "",
                        [
                            "headers" => [
                                "Content-Type" => "application/json",
                                "Api-Key" => null,
                            ],
                            "json" =>
                                // phpcs:ignore Generic.Files.LineLength.TooLong
                                '[{"metrics":[{"name":"metric name","type":"bloop","value":3235,"timestamp":17,"attributes":{"one":1,"two":2,"applicationName":"local"}}]}]',
                        ],
                        $promise,
                    ],
                ]),
            );

        $this->newRelic->sendMetric(
            "metric name",
            3235,
            [
                "one" => 1,
                "two" => 2,
            ],
            "bloop",
            17,
        );
    }
}
