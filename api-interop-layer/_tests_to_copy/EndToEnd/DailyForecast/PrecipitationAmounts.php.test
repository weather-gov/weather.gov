<?php

namespace Drupal\weather_blocks\Plugin\Block\Test\EndToEnd;

use Drupal\weather_blocks\Plugin\Block\DailyForecastBlock;
use Swaggest\JsonSchema\Schema;

final class PrecipitationAmountsTest extends EndToEndBase
{
    /**
     * Create the block under test.
     */
    protected function setUp($type = null): void
    {
        parent::setUp(DailyForecastBlock::class);
    }

    /**
     * Test structure of precip amounts data
     * @group e2e
     */
    public function testPrecipitationAmountsStructure(): void
    {
        // Load e2e data for location X
        $this->onLocationRoute(34.749, -92.275);

        $isoRegex =
            "^2[0-9]{3}-[0-9]{2}-[0-9]{2}T[0-2][0-9]:[0-5][0-9]:[0-5][0-9][+-][0-9]{2}:[0-9]{2}$";
        $hourSpanRegex = "^[0-9][0-9]? +(AM|PM)$";

        $schema = Schema::import(
            json_decode(
                <<<JSON
                {
                  "type": "array",
                  "items": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "startRaw": {
                          "type": "string",
                          "pattern": "$isoRegex"
                        },
                        "endRaw": {
                          "type": "string",
                          "pattern": "$isoRegex"
                        },
                        "start": {
                          "type": "string",
                          "pattern": "$hourSpanRegex"
                        },
                        "end": {
                          "type": "string",
                          "pattern": "$hourSpanRegex"
                        },
                        "value": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
                JSON
                ,
            ),
        );

        $data = $this->block->build();
        $schema->in(json_decode(json_encode($data["precipitationPeriods"])));

        $this->assertTrue(true);
    }
}
