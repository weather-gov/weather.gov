<?php

namespace Drupal\weather_blocks\Plugin\Block\Test\EndToEnd;

use Swaggest\JsonSchema\Context;
use Swaggest\JsonSchema\Schema;

class SchemaHelper
{
    private static function fixup($json)
    {
        $isoRegex =
            "^2[0-9]{3}-[0-9]{2}-[0-9]{2}T[0-2][0-9]:[0-5][0-9]:[0-5][0-9][+-][0-9]{2}:[0-9]{2}$";
        $formattedDateRegex =
            "^.+day, [0-1][0-9]\\\\/[0-3][0-9], [1-2]?[0-9]:[0-5][0-9] (A|P)M [A-Z]{3}";

        $out = str_replace("\$isoRegex", $isoRegex, $json);
        $out = str_replace("\$formattedDateRegex", $formattedDateRegex, $out);

        // Temporary, I think. JSON Schema has a concept of references, but
        // AFAIK they are references to other parts of the same schema document.
        // So it might be worthwhile to create a single schema file with object
        // definitions of the various types we expect, and then build up high-
        // level schemas from those.
        $out = preg_replace_callback(
            '|"\$include:([^"]+)\.json"|',
            function ($matches) {
                $file = $matches[1];
                $load = file_get_contents(
                    __DIR__ . "/schemas/" . $file . ".json",
                );
                return self::fixup($load);
            },
            $out,
        );

        return $out;
    }

    public static function load($path): Schema
    {
        $json = file_get_contents(__DIR__ . "/schemas/" . $path);
        $json = self::fixup($json);

        $schema = Schema::import(json_decode($json));
        $schema->setAdditionalProperties(false);

        return $schema;
    }
}
