@use "uswds-core" as *;

.wx-radar-container {
  aspect-ratio: 1/1 !important;
  height: auto !important;
  width: auto !important;
    
  button.wx-radar-expand {
    border: 0;
    border-radius: radius("md");
    height: units(4);
    width: units(4);
    text-align: center;
    background: color("white");

    @include u-shadow(1);

    svg {
      // Inline elements have a default baseline vertical alignment which
      // adds a bottom gap that cannot be styled away. We can either change the
      // vertical alignment or the display type to get rid of it. Without this
      // change, the button is taller than the contents.
      display: block;
      fill: color("base");
      stroke: color("base");
      height: units(2.5);
      width: units(2.5);

      // units(0.75) is not understood, so calc it.
      margin-left: calc(calc(units(4) - units(2.5)) / 2);
    }

    &:hover,
    &:focus,
    &:active {
      @include u-shadow(2);
    }

    &:hover,
    &:focus {
      background: color("base-lighter");

      svg {
        stroke: color("base-dark");
        fill: color("base-dark");
      }
    }

    &:active {
      background: color("base-light");

      svg {
        stroke: color("base-dark");
        fill: color("base-dark");
      }
    }
  }
}
  
.wx-radar-container.wx-radar-container__expanded {
  aspect-ratio: 3/5 !important;
  height: auto !important;
  width: auto !important;
}

@include at-media("tablet") {
  .wx-radar-container {
      aspect-ratio: 4/3 !important;

      &.wx-radar-container__expanded {
          aspect-ratio: 5/6 !important;
      }
  }
}

@include at-media("desktop") {
    .wx-radar-container {
        aspect-ratio: 1/1 !important;

        &.wx-radar-container__expanded {
            aspect-ratio: 3/2 !important;
        }
    }
}

.wx-location-marker {
  height: 24px !important;
  width: 24px !important;
  background: #18f;
  border: 3px solid white;
  border-radius: 100%;
}

// CMI's own legend strip.
// Let's hide it for now
.control-bar > .legend {
    display: none !important;
}

.wx-radar-legend {
  h4.wx-visual-h3 {
    @include u-text("normal");

    margin-top: 0;
  }

  .wx-radar-legend__row {
    th,
    td {
      vertical-align: top;
      border-top-color: color("base-light");
      border-bottom-color: color("base-light");
    }

    td {
      padding: 0;

      // The cell needs a height in order for
      // its contents to have something to be
      // relative to. It's an older hack, sir,
      // but it checks out.
      min-height: 1px;
    }

    .wx-radar-legend__intensity {
      // Use padding so that it goes inside
      // the border, effectively pushing
      // text content left and down from the
      // gradient.
      padding: units(1) units(2);

      // Setup the border so we can put a
      // gradient in it. We could try using
      // attr() and define the background
      // image here, but attr() is experimental
      // for properties other than content
      // so that doesn't seem safe yet.
      border-left: units(1) solid;
      border-image-slice: 1;
    }
  }
}

.control-bar .legend {
  max-width: 100%;
}
