name: code standards
on:
  pull_request:
  merge_group:

jobs:
  php-lint:
    name: Drupal code standards lint
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.2"

      - name: get composer paths
        id: composer-paths
        run: |
          echo "cache-dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT
          echo "bin-dir=${{ github.workspace }}/$(composer config bin-dir)" >> $GITHUB_OUTPUT

      - name: cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-paths.outputs.cache-dir }}
          key: composer-cache-${{ hashFiles('composer.lock') }}

      - name: cache
        uses: actions/cache@v3
        id: bin-cache
        with:
          path: ${{ steps.composer-paths.outputs.bin-dir }}
          key: composer-bin-${{ hashFiles('composer.lock') }}

      - name: install dependencies
        if: ${{ steps.bin-cache.outputs.cache-hit }} != 'true'
        env:
          COMPOSER_NO_DEV: 0
        run: composer install

      - name: run phpcs
        run: |
          echo "::add-matcher::${{ github.workspace }}/.github/workflows/problem-matcher-phpcs.json"
          vendor/bin/phpcs --report=checkstyle

  js-lint:
    name: JS lint
    runs-on: ubuntu-latest

    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: setup node
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: npm

      - name: install dependencies
        run: npm ci

      - name: add problem matcher
        run: echo "::add-matcher::${{ github.workspace }}/.github/workflows/problem-matcher-eslint.json"

      - name: run eslint
        run: npm run lint

  style-lint:
    name: SCSS lint
    runs-on: ubuntu-latest

    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: setup node
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: npm

      - name: install dependencies
        run: npm ci

        # Stylelint has a GitHub workflow commands output available by default,
        # so we can use that instead of needing a problem matcher.
        # https://stylelint.io/user-guide/options#formatter
        # https://docs.github.com/en/actions/using-workflows/workflow-commands-for-github-actions
      - name: run stylelint
        run: npm run style-lint -- -f github

  php-unit-tests:
    name: PHP unit tests
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.2"
          coverage: xdebug

      - name: get composer paths
        id: composer-paths
        run: |
          echo "cache-dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT
          echo "bin-dir=${{ github.workspace }}/$(composer config bin-dir)" >> $GITHUB_OUTPUT

      - name: cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-paths.outputs.cache-dir }}
          key: composer-cache-${{ hashFiles('composer.lock') }}

      - name: cache
        uses: actions/cache@v3
        id: bin-cache
        with:
          path: ${{ steps.composer-paths.outputs.bin-dir }}
          key: composer-bin-${{ hashFiles('composer.lock') }}

      - name: install dependencies
        if: ${{ steps.bin-cache.outputs.cache-hit }} != 'true'
        env:
          COMPOSER_NO_DEV: 0
        run: composer install

      - name: run unit tests
        run: vendor/bin/phpunit

  end-to-end-tests:
    name: end-to-end tests
    runs-on: ubuntu-latest

    services:
      database:
        image: mariadb:10
        env:
          MYSQL_DATABASE: weathergov
          MYSQL_USER: drupal
          MYSQL_PASSWORD: drupal
          MYSQL_ROOT_PASSWORD: drupal

    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile.dev
          tags: 18f-zscaler-drupal:10-apache
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: bring up server
        env:
          DRUPAL_DB_NAME: weathergov
          DRUPAL_DB_USERNAME: drupal
          DRUPAL_DB_PASSWORD: drupal
          DRUPAL_DB_HOST: database
          DRUPAL_DB_PORT: 3306
        run: |
          docker run -p 8080:8080 -d 18f-zscaler-drupal:10-apache
          sleep 10
          make install-site

      - name: Cypress run
        uses: cypress-io/github-action@v6
