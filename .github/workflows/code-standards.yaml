name: code standards
on:
  pull_request:
  merge_group:

jobs:
  php-lint:
    name: PHP lint
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.2"

      - name: get composer paths
        id: composer-paths
        run: |
          echo "cache-dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT
          echo "bin-dir=${{ github.workspace }}/$(composer config bin-dir)" >> $GITHUB_OUTPUT

      - name: cache composer caches
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-paths.outputs.cache-dir }}
          key: composer-cache-${{ hashFiles('composer.lock') }}

      - name: cache composer bin
        uses: actions/cache@v3
        id: bin-cache
        with:
          path: ${{ steps.composer-paths.outputs.bin-dir }}
          key: composer-bin-${{ hashFiles('composer.lock') }}

      - name: install dependencies
        if: ${{ steps.bin-cache.outputs.cache-hit }} != 'true'
        env:
          COMPOSER_NO_DEV: 0
        run: composer install

      - name: run phpcs
        run: |
          echo "::add-matcher::${{ github.workspace }}/.github/workflows/problem-matcher-phpcs.json"
          vendor/bin/phpcs --report=checkstyle

  js-lint:
    name: JS lint
    runs-on: ubuntu-latest

    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: setup node
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: npm

      - name: install dependencies
        run: npm ci

      - name: add problem matcher
        run: echo "::add-matcher::${{ github.workspace }}/.github/workflows/problem-matcher-eslint.json"

      - name: run eslint
        run: npm run js-lint

  style-lint:
    name: SCSS lint
    runs-on: ubuntu-latest

    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: setup node
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: npm

      - name: install dependencies
        run: npm ci

        # Stylelint has a GitHub workflow commands output available by default,
        # so we can use that instead of needing a problem matcher.
        # https://stylelint.io/user-guide/options#formatter
        # https://docs.github.com/en/actions/using-workflows/workflow-commands-for-github-actions
      - name: run stylelint
        run: npm run style-lint -- -f github

  php-unit-tests:
    name: PHP unit tests
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.2"
          coverage: xdebug

      - name: get composer paths
        id: composer-paths
        run: |
          echo "cache-dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT
          echo "bin-dir=${{ github.workspace }}/$(composer config bin-dir)" >> $GITHUB_OUTPUT

      - name: cache composer caches
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-paths.outputs.cache-dir }}
          key: composer-cache-${{ hashFiles('composer.lock') }}

      - name: cache composer bin
        uses: actions/cache@v3
        id: bin-cache
        with:
          path: ${{ steps.composer-paths.outputs.bin-dir }}
          key: composer-bin-${{ hashFiles('composer.lock') }}

      - name: install dependencies
        if: ${{ steps.bin-cache.outputs.cache-hit }} != 'true'
        env:
          COMPOSER_NO_DEV: 0
        run: composer install

      - name: run unit tests
        run: |
          vendor/bin/phpunit --coverage-clover coverage.xml

      - name: store coverage output
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: coverage.xml
          retention-days: 1

  report-code-coverage:
    name: report code coverage
    runs-on: ubuntu-latest
    needs: [php-unit-tests]

    steps:
      - name: get coverage output
        uses: actions/download-artifact@v3
        with:
          name: coverage-report

      - name: report coverage
        uses: lucassabreu/comment-coverage-clover@v0.10.2
        with:
          file: coverage.xml
          signature: "code coverage report"

  min-code-coverage:
    name: "90% code coverage"
    runs-on: ubuntu-latest
    needs: [php-unit-tests]

    steps:
      - name: get coverage output
        uses: actions/download-artifact@v3
        with:
          name: coverage-report

      - name: 90% code coverage
        id: test-coverage
        uses: johanvanhelden/gha-clover-test-coverage-check@v1
        with:
          percentage: 90
          filename: coverage.xml
          metric: statements

  end-to-end-tests:
    name: end-to-end tests
    runs-on: ubuntu-latest

    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: start the site
        run: docker compose up -d

      # Give the containers a moment to settle.
      - name: wait a tick
        run: sleep 10

      - name: populate the site
        run: |
          cp web/sites/example.settings.dev.php web/sites/settings.dev.php
          make install-site

      - name: Cypress run
        uses: cypress-io/github-action@v6
