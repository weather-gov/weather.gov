runs:
  using: composite
  steps:
    - name: setup image cacheing
      uses: actions/cache@v4
      with:
        key: drupal-image-${{ hashFiles('composer.lock','web/sites/example.settings.dev.php','Dockerfile.dev') }}
        path: /tmp/image.tar

    - name: database dump cache
      uses: actions/cache@v4
      id: db-cache
      with:
        key: drupal-database-${{ hashFiles('web/config/**/*.yml', 'web/scs-export/**/*', 'web/modules/weather_i18n/translations/*.po', 'spatial/**/*.js') }}
        path: weathergov.sql

    - name: start the site
      shell: bash
      run: |
        mkdir .coverage
        chmod a+rwx -R .coverage
        docker load --input /tmp/image.tar
        docker compose up -d
    
    - name: build JS bundle
      uses: ./.github/actions/javascript-bundle

    # Give the containers a moment to settle.
    - name: wait a tick
      shell: bash
      run: sleep 10

    - name: populate the site
      shell: bash
      run: |
        cp web/sites/example.settings.dev.php web/sites/settings.dev.php
        mysql \
          --host=127.0.0.1 \
          --port=3306 \
          --password=drupal \
          --user=root \
          weathergov < weathergov.sql

        echo "UPDATE users SET uid=0 WHERE uid=2;" | mysql \
          --host=127.0.0.1 \
          --port=3306 \
          --password=drupal \
          --user=root \
          weathergov

    - name: clear the Drupal cache
      shell: bash
      run: make cc

    # Restart the interop layer once the database is loaded. It immediately
    # tries to run some queries, but if the database isn't ready, it'll crash
    # and die.
    - name: restart the interop layer
      shell: bash
      run: |
        docker compose restart api-interop-layer